<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>info-management-system</groupId>
    <artifactId>spring-mvc</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--When no packaging is declared, Maven assumes the packaging is the default: jar-->
    <packaging>war</packaging>

    <!--Below will create a war file with the name info-management-system-->
    <build>
        <finalName>info-management-system</finalName>
    </build>

    <dependencies>

        <!--Spring MVC dependencies begin-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
        </dependency>

        <!--Spring MVC dependencies end-->

        <!--Test dependencies begin-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>5.1.1.RELEASE</version>
            <scope>test</scope>
        </dependency>
        <!--Test dependencies end-->

        <!-- logger dependencies begin-->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- logger dependencies end-->

        <!--this library jackson-databind provides implicit conversion between JSON and POJO classes.
        When this library is imported into pom.xml, you don't have to worry about converting
        JSON requests into POJO or POJO responses into JSON; this is fully handled implicitly by this library.
        In case you're interested in XML data type, then use jackson-xml-databind.-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.8</version>
        </dependency>

    </dependencies>
</project>